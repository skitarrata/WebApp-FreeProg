CREATE TABLE IF NOT EXISTS user (
    id INT AUTO_INCREMENT,
    user VARCHAR(50) NOT NULL PRIMARY KEY,
    email VARCHAR(50) NOT NULL,
    pass VARCHAR(255) NOT NULL,
    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS videos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    typeprog VARCHAR(50) NOT NULL,
    _owner VARCHAR(50),
    title VARCHAR(255) NOT NULL,
    names VARCHAR(255) NOT NULL,
    paths VARCHAR(255) NOT NULL,
    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (_owner) REFERENCES user(user) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS exercises (
    id INT AUTO_INCREMENT PRIMARY KEY,
    _owner VARCHAR(50),
    typeprog VARCHAR(50) NOT NULL,
    title VARCHAR(255) NOT NULL,
    paths VARCHAR(255) NOT NULL,
    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (_owner) REFERENCES user(user) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS questions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    _owner VARCHAR(50),
    question_text TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (_owner) REFERENCES user(user) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS answers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    _owner VARCHAR(50),
    question_id INT,
    answer_text TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
    FOREIGN KEY (_owner) REFERENCES user(user) ON DELETE CASCADE
);

SELECT * FROM user;
SELECT * FROM videos;
SELECT * FROM exercises;
SELECT * FROM questions;
SELECT * FROM answers;